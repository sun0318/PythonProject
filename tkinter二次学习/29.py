import threading

num = 0

def task():
    obj = threading.current_thread()
    print("当前是线程[{0}],已经开始运行了...".format(obj.getName()))
    cond.acquire()  # 上锁
    global num
    print("当前是线程[{0}],处于等待状态...".format(obj.getName()))
    cond.wait()  # 暂停，等待唤醒
    num += 1
    print("当前是线程[{0}],等待状态结束，继续运行...".format(obj.getName()))
    cond.release()  # 解锁

if __name__ == '__main__':

    cond = threading.Condition()  # 实例条件锁对象

    for i in range(10):
        t1 = threading.Thread(target=task,)  # 开启10条线程
        t1.start()  # 等待CPU调度执行

    while num < 10:
        task_num = int(input("请输入你要执行的线程数量:"))

        cond.acquire()
        cond.notify(task_num)  # 通知唤醒
        cond.release()

    print("最终结果:",num)

# ==== 执行结果 ====

"""
当前是线程[Thread-1],已经开始运行了...
当前是线程[Thread-1],处于等待状态...
当前是线程[Thread-2],已经开始运行了...
当前是线程[Thread-2],处于等待状态...
当前是线程[Thread-3],已经开始运行了...
当前是线程[Thread-3],处于等待状态...
当前是线程[Thread-4],已经开始运行了...
当前是线程[Thread-4],处于等待状态...
当前是线程[Thread-5],已经开始运行了...
当前是线程[Thread-5],处于等待状态...
当前是线程[Thread-6],已经开始运行了...
当前是线程[Thread-6],处于等待状态...
当前是线程[Thread-7],已经开始运行了...
当前是线程[Thread-7],处于等待状态...
当前是线程[Thread-8],已经开始运行了...
当前是线程[Thread-8],处于等待状态...
当前是线程[Thread-9],已经开始运行了...
当前是线程[Thread-9],处于等待状态...
当前是线程[Thread-10],已经开始运行了...
当前是线程[Thread-10],处于等待状态...
请输入你要执行的线程数量:2
当前是线程[Thread-1],等待状态结束，继续运行...
当前是线程[Thread-2],等待状态结束，继续运行...
请输入你要执行的线程数量:3
当前是线程[Thread-3],等待状态结束，继续运行...
当前是线程[Thread-5],等待状态结束，继续运行...
当前是线程[Thread-4],等待状态结束，继续运行...
请输入你要执行的线程数量:5
当前是线程[Thread-6],等待状态结束，继续运行...
当前是线程[Thread-7],等待状态结束，继续运行...
当前是线程[Thread-8],等待状态结束，继续运行...
当前是线程[Thread-10],等待状态结束，继续运行...
当前是线程[Thread-9],等待状态结束，继续运行...
请输入你要执行的线程数量:1
最终结果: 10
"""
